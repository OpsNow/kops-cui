@Library("github.com/opsnow-tools/valve-butler")
def pump = new com.opsnow.valve.Butler()
def label = "worker-${UUID.randomUUID().toString()}"
properties([
  buildDiscarder(logRotator(daysToKeepStr: "60", numToKeepStr: "30"))
])
podTemplate(label: label, containers: [
  containerTemplate(name: "builder", image: "opspresso/builder", command: "cat", ttyEnabled: true, alwaysPullImage: true)
], volumes: [
  hostPathVolume(mountPath: "/var/run/docker.sock", hostPath: "/var/run/docker.sock"),
  hostPathVolume(mountPath: "/home/jenkins/.helm", hostPath: "/home/jenkins/.helm")
]) {
  node(label) {
    stage("Prepare") {
      container("builder") {
        pump.prepare()

        if (!BASE_DOMAIN) {
          BASE_DOMAIN = pump.base_domain
        }
        if (!SLACK_TOKEN) {
          SLACK_TOKEN = pump.slack_token
        }
      }
    }
    stage("Checkout") {
      container("builder") {
        try {
          if (REPOSITORY_SECRET) {
            git(url: REPOSITORY_URL, branch: BRANCH_NAME, credentialsId: REPOSITORY_SECRET)
          } else {
            git(url: REPOSITORY_URL, branch: BRANCH_NAME)
          }
        } catch (e) {
          checkout_failure(NAME, PIPELINE)
          throw e
        }

        pump.scan(NAME)
      }
    }
    stage("Command") {
      container("builder") {
        sh """
          $COMMAND
        """
      }
    }
  }
}
